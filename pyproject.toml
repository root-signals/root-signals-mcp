[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "root-mcp-server"
version = "0.1.0"
description = "MCP server for RootSignals evaluators"
readme = "README.md"
authors = [
    {name = "RootSignals Team", email = "info@rootsignals.ai"}
]
requires-python = ">=3.13"
license = {text = "MIT"}
classifiers = [

    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "root-signals==1.5.1",
    "mcp-python>=0.1.4",
    "mcp>=1.4.1",
    "uvicorn>=0.18.0",
    "sse-starlette>=2.2.1",
    "httpx-sse>=0.4.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.244",
    "isort>=5.12.0",
    "freezegun>=1.5.1",
]

[project.scripts]
root-mcp-server = "root_mcp_server.unified_server:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py313"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "C4", "N", "UP", "PL"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["N", "B"]

